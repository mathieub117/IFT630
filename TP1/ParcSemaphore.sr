global parc
    const NOMBRE_TOURS_PISTE := 5
    const TEMPS_TOURS_PISTE := 1000
    const NOMBRE_PASSAGERS_VOITURE := 5
    const MULTIPLICATEUR := 3
    const NOMBRE_PERSONNES := NOMBRE_PASSAGERS_VOITURE * MULTIPLICATEUR

    sem passager[NOMBRE_PASSAGERS_VOITURE] := ([NOMBRE_PASSAGERS_VOITURE] 1)

    op AfficherPersonnePassager(i,j:int)
body parc
    proc AfficherPersonnePassager(i,j)
        write("La Personne #",i, "A entré dans le siège #",j)
    end
end

resource main()
    import parc

    var personneDansVoiture := 0

    process personne(i := 1 to parc.NOMBRE_PERSONNES)
	do true ->
	    P(parc.passager[1 + (i mod parc.NOMBRE_PASSAGERS_VOITURE)])
	    personneDansVoiture++
	    parc.AfficherPersonnePassager(i, personneDansVoiture)

	    #Hack pour que les premiers ne se réexécute pas 2 fois de suite au 1er tour
	    nap((parc.NOMBRE_TOURS_PISTE * parc.TEMPS_TOURS_PISTE) * parc.MULTIPLICATEUR)
	od
    end

    process voiture
        do true ->
	    if personneDansVoiture = parc.NOMBRE_PASSAGERS_VOITURE ->
		fa tp := 1 to parc.NOMBRE_TOURS_PISTE ->
                    nap(parc.TEMPS_TOURS_PISTE)
	            write("Tour", tp)
	        af
	        fa i := 1 to parc.NOMBRE_PASSAGERS_VOITURE ->
		    V(parc.passager[i])
	        af
		personneDansVoiture := 0
	    fi
        od
    end
end
